Create table Books
(isbn VARCHAR(100) not NULL,
stock INTEGER default 0,
PRIMARY KEY (isbn));

Create table Clients
(id INTEGER GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
fullname VARCHAR(100) not NULL,
adress VARCHAR(500),
email VARCHAR(100) not NULL,
password VARCHAR(100),
PRIMARY KEY (id));

Create table BookOrders
(id INTEGER GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
quantity INTEGER default 1,
STATE VARCHAR(200),
isbn VARCHAR(100) not NULL,
clientId INTEGER not NULL,
orderDate DATE not NULL,
PRIMARY KEY (id),
FOREIGN KEY (clientId) REFERENCES Clients(id),
FOREIGN KEY (isbn) REFERENCES Books(isbn));


Create table BookSells
(id INTEGER not NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
quantity INTEGER,
totalPrice DOUBLE,
clientId INTEGER not NULL,
isbn VARCHAR(100) not NULL,
sellDate DATE not NULL,
PRIMARY KEY (id),
FOREIGN KEY (clientId) REFERENCES Clients(id),
FOREIGN KEY (isbn) REFERENCES Books(isbn));

INSERT INTO BOOKSTORE.BOOKS (ISBN, STOCK) 
	VALUES ('9781311427618', 10);
INSERT INTO BOOKSTORE.BOOKS (ISBN, STOCK) 
	VALUES ('9781311828491', 23);
INSERT INTO BOOKSTORE.BOOKS (ISBN, STOCK) 
	VALUES ('9789896600945', 13);
INSERT INTO BOOKSTORE.BOOKS (ISBN, STOCK) 
	VALUES ('9788468729381', 7);
INSERT INTO BOOKSTORE.BOOKS (ISBN, STOCK) 
	VALUES ('9788535278057', 17);
