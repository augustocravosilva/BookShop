/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package storeguiapp;

import applicationejbAPI.StoreBeanRemote;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.naming.InitialContext;
import javax.naming.NamingException;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import logic.BookOrder;
import logic.BookSell;

/**
 *
 * @author augusto
 */
public class ListOrders extends javax.swing.JFrame {
    private StoreBeanRemote storeBean = lookupStoreBeanRemote();
    private SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");

    /**
     * Creates new form ListOrders
     */
    public ListOrders(boolean orders) {
        initComponents();
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        TableModel tm;
        if(orders)
        {   
            String columnNames[] = {"id","date","book title","quantity","client","state"};
            ArrayList<Object[]> rows = new ArrayList();
            List<BookOrder> so = storeBean.getAllOrders();
            for(BookOrder s : so)
            {
                ArrayList<Object> row = new ArrayList();
                row.add(s.getId());
                row.add(sdf.format(s.getOrderdate()));
                row.add(storeBean.getBook(s.getIsbn().getIsbn()).title);
                row.add(s.getQuantity());
                row.add(s.getClientid().getFullname());
                row.add(s.getState());
                rows.add(row.toArray());
            }
            Object[][] data = new Object[rows.size()][];
            data = rows.toArray(data);
            tm = new DefaultTableModel(data, columnNames);
        }else
        {
            String columnNames[] = {"id","date","book title","quantity","client","total"};
            ArrayList<Object[]> rows = new ArrayList();
            List<BookSell> so = storeBean.getAllSells();
            for(BookSell s : so)
            {
                ArrayList<Object> row = new ArrayList();
                row.add(s.getId());
                row.add(sdf.format(s.getSelldate()));
                row.add(storeBean.getBook(s.getIsbn().getIsbn()).title);
                row.add(s.getQuantity());
                row.add(s.getClientid().getFullname());
                row.add(s.getTotalprice());
                rows.add(row.toArray());
            }
            Object[][] data = new Object[rows.size()][];
            data = rows.toArray(data);
            tm = new DefaultTableModel(data, columnNames);
        }
        jTable1.setModel(tm);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("List");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private StoreBeanRemote lookupStoreBeanRemote() {
        try {
            javax.naming.Context c = new InitialContext();
            return (StoreBeanRemote) c.lookup("java:global/Application/Application-ejb/StoreBean!applicationejbAPI.StoreBeanRemote");
        } catch (NamingException ne) {
            Logger.getLogger(getClass().getName()).log(Level.SEVERE, "exception caught", ne);
            throw new RuntimeException(ne);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
